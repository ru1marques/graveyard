{
  "version": 3,
  "sources": ["../../../lodash.deburr/index.js", "../../../@sindresorhus/transliterate/node_modules/escape-string-regexp/index.js", "../../../@sindresorhus/transliterate/replacements.js", "../../../@sindresorhus/transliterate/index.js", "../../../@sindresorhus/slugify/overridable-replacements.js", "../../../@sindresorhus/slugify/index.js", "../../../@strapi/content-type-builder/admin/src/constants.ts", "../../../@strapi/content-type-builder/admin/src/components/AutoReloadOverlayBlocker.tsx", "../../../@strapi/content-type-builder/admin/src/utils/makeUnique.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManagerProvider/utils/retrieveComponentsFromSchema.ts", "../../../@strapi/content-type-builder/admin/src/utils/getRelationType.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManagerProvider/reducer.ts", "../../../@strapi/content-type-builder/admin/src/utils/nameToSlug.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/createUid.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/customFieldDefaultOptionsReducer.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/relations.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/reducer.ts"],
  "sourcesContent": ["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n", "'use strict';\n\nconst matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn string.replace(matchOperatorsRegex, '\\\\$&');\n};\n", "'use strict';\n\nmodule.exports = [\n\t// German umlauts\n\t['ß', 'ss'],\n\t['ä', 'ae'],\n\t['Ä', 'Ae'],\n\t['ö', 'oe'],\n\t['Ö', 'Oe'],\n\t['ü', 'ue'],\n\t['Ü', 'Ue'],\n\n\t// Latin\n\t['À', 'A'],\n\t['Á', 'A'],\n\t['Â', 'A'],\n\t['Ã', 'A'],\n\t['Ä', 'Ae'],\n\t['Å', 'A'],\n\t['Æ', 'AE'],\n\t['Ç', 'C'],\n\t['È', 'E'],\n\t['É', 'E'],\n\t['Ê', 'E'],\n\t['Ë', 'E'],\n\t['Ì', 'I'],\n\t['Í', 'I'],\n\t['Î', 'I'],\n\t['Ï', 'I'],\n\t['Ð', 'D'],\n\t['Ñ', 'N'],\n\t['Ò', 'O'],\n\t['Ó', 'O'],\n\t['Ô', 'O'],\n\t['Õ', 'O'],\n\t['Ö', 'Oe'],\n\t['Ő', 'O'],\n\t['Ø', 'O'],\n\t['Ù', 'U'],\n\t['Ú', 'U'],\n\t['Û', 'U'],\n\t['Ü', 'Ue'],\n\t['Ű', 'U'],\n\t['Ý', 'Y'],\n\t['Þ', 'TH'],\n\t['ß', 'ss'],\n\t['à', 'a'],\n\t['á', 'a'],\n\t['â', 'a'],\n\t['ã', 'a'],\n\t['ä', 'ae'],\n\t['å', 'a'],\n\t['æ', 'ae'],\n\t['ç', 'c'],\n\t['è', 'e'],\n\t['é', 'e'],\n\t['ê', 'e'],\n\t['ë', 'e'],\n\t['ì', 'i'],\n\t['í', 'i'],\n\t['î', 'i'],\n\t['ï', 'i'],\n\t['ð', 'd'],\n\t['ñ', 'n'],\n\t['ò', 'o'],\n\t['ó', 'o'],\n\t['ô', 'o'],\n\t['õ', 'o'],\n\t['ö', 'oe'],\n\t['ő', 'o'],\n\t['ø', 'o'],\n\t['ù', 'u'],\n\t['ú', 'u'],\n\t['û', 'u'],\n\t['ü', 'ue'],\n\t['ű', 'u'],\n\t['ý', 'y'],\n\t['þ', 'th'],\n\t['ÿ', 'y'],\n\t['ẞ', 'SS'],\n\n\t// Vietnamese\n\t['à', 'a'],\n\t['À', 'A'],\n\t['á', 'a'],\n\t['Á', 'A'],\n\t['â', 'a'],\n\t['Â', 'A'],\n\t['ã', 'a'],\n\t['Ã', 'A'],\n\t['è', 'e'],\n\t['È', 'E'],\n\t['é', 'e'],\n\t['É', 'E'],\n\t['ê', 'e'],\n\t['Ê', 'E'],\n\t['ì', 'i'],\n\t['Ì', 'I'],\n\t['í', 'i'],\n\t['Í', 'I'],\n\t['ò', 'o'],\n\t['Ò', 'O'],\n\t['ó', 'o'],\n\t['Ó', 'O'],\n\t['ô', 'o'],\n\t['Ô', 'O'],\n\t['õ', 'o'],\n\t['Õ', 'O'],\n\t['ù', 'u'],\n\t['Ù', 'U'],\n\t['ú', 'u'],\n\t['Ú', 'U'],\n\t['ý', 'y'],\n\t['Ý', 'Y'],\n\t['ă', 'a'],\n\t['Ă', 'A'],\n\t['Đ', 'D'],\n\t['đ', 'd'],\n\t['ĩ', 'i'],\n\t['Ĩ', 'I'],\n\t['ũ', 'u'],\n\t['Ũ', 'U'],\n\t['ơ', 'o'],\n\t['Ơ', 'O'],\n\t['ư', 'u'],\n\t['Ư', 'U'],\n\t['ạ', 'a'],\n\t['Ạ', 'A'],\n\t['ả', 'a'],\n\t['Ả', 'A'],\n\t['ấ', 'a'],\n\t['Ấ', 'A'],\n\t['ầ', 'a'],\n\t['Ầ', 'A'],\n\t['ẩ', 'a'],\n\t['Ẩ', 'A'],\n\t['ẫ', 'a'],\n\t['Ẫ', 'A'],\n\t['ậ', 'a'],\n\t['Ậ', 'A'],\n\t['ắ', 'a'],\n\t['Ắ', 'A'],\n\t['ằ', 'a'],\n\t['Ằ', 'A'],\n\t['ẳ', 'a'],\n\t['Ẳ', 'A'],\n\t['ẵ', 'a'],\n\t['Ẵ', 'A'],\n\t['ặ', 'a'],\n\t['Ặ', 'A'],\n\t['ẹ', 'e'],\n\t['Ẹ', 'E'],\n\t['ẻ', 'e'],\n\t['Ẻ', 'E'],\n\t['ẽ', 'e'],\n\t['Ẽ', 'E'],\n\t['ế', 'e'],\n\t['Ế', 'E'],\n\t['ề', 'e'],\n\t['Ề', 'E'],\n\t['ể', 'e'],\n\t['Ể', 'E'],\n\t['ễ', 'e'],\n\t['Ễ', 'E'],\n\t['ệ', 'e'],\n\t['Ệ', 'E'],\n\t['ỉ', 'i'],\n\t['Ỉ', 'I'],\n\t['ị', 'i'],\n\t['Ị', 'I'],\n\t['ọ', 'o'],\n\t['Ọ', 'O'],\n\t['ỏ', 'o'],\n\t['Ỏ', 'O'],\n\t['ố', 'o'],\n\t['Ố', 'O'],\n\t['ồ', 'o'],\n\t['Ồ', 'O'],\n\t['ổ', 'o'],\n\t['Ổ', 'O'],\n\t['ỗ', 'o'],\n\t['Ỗ', 'O'],\n\t['ộ', 'o'],\n\t['Ộ', 'O'],\n\t['ớ', 'o'],\n\t['Ớ', 'O'],\n\t['ờ', 'o'],\n\t['Ờ', 'O'],\n\t['ở', 'o'],\n\t['Ở', 'O'],\n\t['ỡ', 'o'],\n\t['Ỡ', 'O'],\n\t['ợ', 'o'],\n\t['Ợ', 'O'],\n\t['ụ', 'u'],\n\t['Ụ', 'U'],\n\t['ủ', 'u'],\n\t['Ủ', 'U'],\n\t['ứ', 'u'],\n\t['Ứ', 'U'],\n\t['ừ', 'u'],\n\t['Ừ', 'U'],\n\t['ử', 'u'],\n\t['Ử', 'U'],\n\t['ữ', 'u'],\n\t['Ữ', 'U'],\n\t['ự', 'u'],\n\t['Ự', 'U'],\n\t['ỳ', 'y'],\n\t['Ỳ', 'Y'],\n\t['ỵ', 'y'],\n\t['Ỵ', 'Y'],\n\t['ỷ', 'y'],\n\t['Ỷ', 'Y'],\n\t['ỹ', 'y'],\n\t['Ỹ', 'Y'],\n\n\t// Arabic\n\t['ء', 'e'],\n\t['آ', 'a'],\n\t['أ', 'a'],\n\t['ؤ', 'w'],\n\t['إ', 'i'],\n\t['ئ', 'y'],\n\t['ا', 'a'],\n\t['ب', 'b'],\n\t['ة', 't'],\n\t['ت', 't'],\n\t['ث', 'th'],\n\t['ج', 'j'],\n\t['ح', 'h'],\n\t['خ', 'kh'],\n\t['د', 'd'],\n\t['ذ', 'dh'],\n\t['ر', 'r'],\n\t['ز', 'z'],\n\t['س', 's'],\n\t['ش', 'sh'],\n\t['ص', 's'],\n\t['ض', 'd'],\n\t['ط', 't'],\n\t['ظ', 'z'],\n\t['ع', 'e'],\n\t['غ', 'gh'],\n\t['ـ', '_'],\n\t['ف', 'f'],\n\t['ق', 'q'],\n\t['ك', 'k'],\n\t['ل', 'l'],\n\t['م', 'm'],\n\t['ن', 'n'],\n\t['ه', 'h'],\n\t['و', 'w'],\n\t['ى', 'a'],\n\t['ي', 'y'],\n\t['َ‎', 'a'],\n\t['ُ', 'u'],\n\t['ِ‎', 'i'],\n\t['٠', '0'],\n\t['١', '1'],\n\t['٢', '2'],\n\t['٣', '3'],\n\t['٤', '4'],\n\t['٥', '5'],\n\t['٦', '6'],\n\t['٧', '7'],\n\t['٨', '8'],\n\t['٩', '9'],\n\n\t// Persian / Farsi\n\t['چ', 'ch'],\n\t['ک', 'k'],\n\t['گ', 'g'],\n\t['پ', 'p'],\n\t['ژ', 'zh'],\n\t['ی', 'y'],\n\t['۰', '0'],\n\t['۱', '1'],\n\t['۲', '2'],\n\t['۳', '3'],\n\t['۴', '4'],\n\t['۵', '5'],\n\t['۶', '6'],\n\t['۷', '7'],\n\t['۸', '8'],\n\t['۹', '9'],\n\n\t// Pashto\n\t['ټ', 'p'],\n\t['ځ', 'z'],\n\t['څ', 'c'],\n\t['ډ', 'd'],\n\t['ﺫ', 'd'],\n\t['ﺭ', 'r'],\n\t['ړ', 'r'],\n\t['ﺯ', 'z'],\n\t['ږ', 'g'],\n\t['ښ', 'x'],\n\t['ګ', 'g'],\n\t['ڼ', 'n'],\n\t['ۀ', 'e'],\n\t['ې', 'e'],\n\t['ۍ', 'ai'],\n\n\t// Urdu\n\t['ٹ', 't'],\n\t['ڈ', 'd'],\n\t['ڑ', 'r'],\n\t['ں', 'n'],\n\t['ہ', 'h'],\n\t['ھ', 'h'],\n\t['ے', 'e'],\n\n\t// Russian\n\t['А', 'A'],\n\t['а', 'a'],\n\t['Б', 'B'],\n\t['б', 'b'],\n\t['В', 'V'],\n\t['в', 'v'],\n\t['Г', 'G'],\n\t['г', 'g'],\n\t['Д', 'D'],\n\t['д', 'd'],\n\t['Е', 'E'],\n\t['е', 'e'],\n\t['Ж', 'Zh'],\n\t['ж', 'zh'],\n\t['З', 'Z'],\n\t['з', 'z'],\n\t['И', 'I'],\n\t['и', 'i'],\n\t['Й', 'J'],\n\t['й', 'j'],\n\t['К', 'K'],\n\t['к', 'k'],\n\t['Л', 'L'],\n\t['л', 'l'],\n\t['М', 'M'],\n\t['м', 'm'],\n\t['Н', 'N'],\n\t['н', 'n'],\n\t['О', 'O'],\n\t['о', 'o'],\n\t['П', 'P'],\n\t['п', 'p'],\n\t['Р', 'R'],\n\t['р', 'r'],\n\t['С', 'S'],\n\t['с', 's'],\n\t['Т', 'T'],\n\t['т', 't'],\n\t['У', 'U'],\n\t['у', 'u'],\n\t['Ф', 'F'],\n\t['ф', 'f'],\n\t['Х', 'H'],\n\t['х', 'h'],\n\t['Ц', 'Cz'],\n\t['ц', 'cz'],\n\t['Ч', 'Ch'],\n\t['ч', 'ch'],\n\t['Ш', 'Sh'],\n\t['ш', 'sh'],\n\t['Щ', 'Shh'],\n\t['щ', 'shh'],\n\t['Ъ', ''],\n\t['ъ', ''],\n\t['Ы', 'Y'],\n\t['ы', 'y'],\n\t['Ь', ''],\n\t['ь', ''],\n\t['Э', 'E'],\n\t['э', 'e'],\n\t['Ю', 'Yu'],\n\t['ю', 'yu'],\n\t['Я', 'Ya'],\n\t['я', 'ya'],\n\t['Ё', 'Yo'],\n\t['ё', 'yo'],\n\n\t// Romanian\n\t['ă', 'a'],\n\t['Ă', 'A'],\n\t['ș', 's'],\n\t['Ș', 'S'],\n\t['ț', 't'],\n\t['Ț', 'T'],\n\t['ţ', 't'],\n\t['Ţ', 'T'],\n\n\t// Turkish\n\t['ş', 's'],\n\t['Ş', 'S'],\n\t['ç', 'c'],\n\t['Ç', 'C'],\n\t['ğ', 'g'],\n\t['Ğ', 'G'],\n\t['ı', 'i'],\n\t['İ', 'I'],\n\n\t// Armenian\n\t['ա', 'a'],\n\t['Ա', 'A'],\n\t['բ', 'b'],\n\t['Բ', 'B'],\n\t['գ', 'g'],\n\t['Գ', 'G'],\n\t['դ', 'd'],\n\t['Դ', 'D'],\n\t['ե', 'ye'],\n\t['Ե', 'Ye'],\n\t['զ', 'z'],\n\t['Զ', 'Z'],\n\t['է', 'e'],\n\t['Է', 'E'],\n\t['ը', 'y'],\n\t['Ը', 'Y'],\n\t['թ', 't'],\n\t['Թ', 'T'],\n\t['ժ', 'zh'],\n\t['Ժ', 'Zh'],\n\t['ի', 'i'],\n\t['Ի', 'I'],\n\t['լ', 'l'],\n\t['Լ', 'L'],\n\t['խ', 'kh'],\n\t['Խ', 'Kh'],\n\t['ծ', 'ts'],\n\t['Ծ', 'Ts'],\n\t['կ', 'k'],\n\t['Կ', 'K'],\n\t['հ', 'h'],\n\t['Հ', 'H'],\n\t['ձ', 'dz'],\n\t['Ձ', 'Dz'],\n\t['ղ', 'gh'],\n\t['Ղ', 'Gh'],\n\t['ճ', 'tch'],\n\t['Ճ', 'Tch'],\n\t['մ', 'm'],\n\t['Մ', 'M'],\n\t['յ', 'y'],\n\t['Յ', 'Y'],\n\t['ն', 'n'],\n\t['Ն', 'N'],\n\t['շ', 'sh'],\n\t['Շ', 'Sh'],\n\t['ո', 'vo'],\n\t['Ո', 'Vo'],\n\t['չ', 'ch'],\n\t['Չ', 'Ch'],\n\t['պ', 'p'],\n\t['Պ', 'P'],\n\t['ջ', 'j'],\n\t['Ջ', 'J'],\n\t['ռ', 'r'],\n\t['Ռ', 'R'],\n\t['ս', 's'],\n\t['Ս', 'S'],\n\t['վ', 'v'],\n\t['Վ', 'V'],\n\t['տ', 't'],\n\t['Տ', 'T'],\n\t['ր', 'r'],\n\t['Ր', 'R'],\n\t['ց', 'c'],\n\t['Ց', 'C'],\n\t['ու', 'u'],\n\t['ՈՒ', 'U'],\n\t['Ու', 'U'],\n\t['փ', 'p'],\n\t['Փ', 'P'],\n\t['ք', 'q'],\n\t['Ք', 'Q'],\n\t['օ', 'o'],\n\t['Օ', 'O'],\n\t['ֆ', 'f'],\n\t['Ֆ', 'F'],\n\t['և', 'yev'],\n\n\t// Georgian\n\t['ა', 'a'],\n\t['ბ', 'b'],\n\t['გ', 'g'],\n\t['დ', 'd'],\n\t['ე', 'e'],\n\t['ვ', 'v'],\n\t['ზ', 'z'],\n\t['თ', 't'],\n\t['ი', 'i'],\n\t['კ', 'k'],\n\t['ლ', 'l'],\n\t['მ', 'm'],\n\t['ნ', 'n'],\n\t['ო', 'o'],\n\t['პ', 'p'],\n\t['ჟ', 'zh'],\n\t['რ', 'r'],\n\t['ს', 's'],\n\t['ტ', 't'],\n\t['უ', 'u'],\n\t['ფ', 'ph'],\n\t['ქ', 'q'],\n\t['ღ', 'gh'],\n\t['ყ', 'k'],\n\t['შ', 'sh'],\n\t['ჩ', 'ch'],\n\t['ც', 'ts'],\n\t['ძ', 'dz'],\n\t['წ', 'ts'],\n\t['ჭ', 'tch'],\n\t['ხ', 'kh'],\n\t['ჯ', 'j'],\n\t['ჰ', 'h'],\n\n\t// Czech\n\t['č', 'c'],\n\t['ď', 'd'],\n\t['ě', 'e'],\n\t['ň', 'n'],\n\t['ř', 'r'],\n\t['š', 's'],\n\t['ť', 't'],\n\t['ů', 'u'],\n\t['ž', 'z'],\n\t['Č', 'C'],\n\t['Ď', 'D'],\n\t['Ě', 'E'],\n\t['Ň', 'N'],\n\t['Ř', 'R'],\n\t['Š', 'S'],\n\t['Ť', 'T'],\n\t['Ů', 'U'],\n\t['Ž', 'Z'],\n\n\t// Dhivehi\n\t['ހ', 'h'],\n\t['ށ', 'sh'],\n\t['ނ', 'n'],\n\t['ރ', 'r'],\n\t['ބ', 'b'],\n\t['ޅ', 'lh'],\n\t['ކ', 'k'],\n\t['އ', 'a'],\n\t['ވ', 'v'],\n\t['މ', 'm'],\n\t['ފ', 'f'],\n\t['ދ', 'dh'],\n\t['ތ', 'th'],\n\t['ލ', 'l'],\n\t['ގ', 'g'],\n\t['ޏ', 'gn'],\n\t['ސ', 's'],\n\t['ޑ', 'd'],\n\t['ޒ', 'z'],\n\t['ޓ', 't'],\n\t['ޔ', 'y'],\n\t['ޕ', 'p'],\n\t['ޖ', 'j'],\n\t['ޗ', 'ch'],\n\t['ޘ', 'tt'],\n\t['ޙ', 'hh'],\n\t['ޚ', 'kh'],\n\t['ޛ', 'th'],\n\t['ޜ', 'z'],\n\t['ޝ', 'sh'],\n\t['ޞ', 's'],\n\t['ޟ', 'd'],\n\t['ޠ', 't'],\n\t['ޡ', 'z'],\n\t['ޢ', 'a'],\n\t['ޣ', 'gh'],\n\t['ޤ', 'q'],\n\t['ޥ', 'w'],\n\t['ަ', 'a'],\n\t['ާ', 'aa'],\n\t['ި', 'i'],\n\t['ީ', 'ee'],\n\t['ު', 'u'],\n\t['ޫ', 'oo'],\n\t['ެ', 'e'],\n\t['ޭ', 'ey'],\n\t['ޮ', 'o'],\n\t['ޯ', 'oa'],\n\t['ް', ''],\n\n\t// Greek\n\t['α', 'a'],\n\t['β', 'v'],\n\t['γ', 'g'],\n\t['δ', 'd'],\n\t['ε', 'e'],\n\t['ζ', 'z'],\n\t['η', 'i'],\n\t['θ', 'th'],\n\t['ι', 'i'],\n\t['κ', 'k'],\n\t['λ', 'l'],\n\t['μ', 'm'],\n\t['ν', 'n'],\n\t['ξ', 'ks'],\n\t['ο', 'o'],\n\t['π', 'p'],\n\t['ρ', 'r'],\n\t['σ', 's'],\n\t['τ', 't'],\n\t['υ', 'y'],\n\t['φ', 'f'],\n\t['χ', 'x'],\n\t['ψ', 'ps'],\n\t['ω', 'o'],\n\t['ά', 'a'],\n\t['έ', 'e'],\n\t['ί', 'i'],\n\t['ό', 'o'],\n\t['ύ', 'y'],\n\t['ή', 'i'],\n\t['ώ', 'o'],\n\t['ς', 's'],\n\t['ϊ', 'i'],\n\t['ΰ', 'y'],\n\t['ϋ', 'y'],\n\t['ΐ', 'i'],\n\t['Α', 'A'],\n\t['Β', 'B'],\n\t['Γ', 'G'],\n\t['Δ', 'D'],\n\t['Ε', 'E'],\n\t['Ζ', 'Z'],\n\t['Η', 'I'],\n\t['Θ', 'TH'],\n\t['Ι', 'I'],\n\t['Κ', 'K'],\n\t['Λ', 'L'],\n\t['Μ', 'M'],\n\t['Ν', 'N'],\n\t['Ξ', 'KS'],\n\t['Ο', 'O'],\n\t['Π', 'P'],\n\t['Ρ', 'R'],\n\t['Σ', 'S'],\n\t['Τ', 'T'],\n\t['Υ', 'Y'],\n\t['Φ', 'F'],\n\t['Χ', 'X'],\n\t['Ψ', 'PS'],\n\t['Ω', 'O'],\n\t['Ά', 'A'],\n\t['Έ', 'E'],\n\t['Ί', 'I'],\n\t['Ό', 'O'],\n\t['Ύ', 'Y'],\n\t['Ή', 'I'],\n\t['Ώ', 'O'],\n\t['Ϊ', 'I'],\n\t['Ϋ', 'Y'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Hungarian\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ö', 'o'],\n\t// ['Ö', 'O'],\n\t// ['ü', 'u'],\n\t// ['Ü', 'U'],\n\t// ['ű', 'u'],\n\t// ['Ű', 'U'],\n\n\t// Latvian\n\t['ā', 'a'],\n\t['ē', 'e'],\n\t['ģ', 'g'],\n\t['ī', 'i'],\n\t['ķ', 'k'],\n\t['ļ', 'l'],\n\t['ņ', 'n'],\n\t['ū', 'u'],\n\t['Ā', 'A'],\n\t['Ē', 'E'],\n\t['Ģ', 'G'],\n\t['Ī', 'I'],\n\t['Ķ', 'K'],\n\t['Ļ', 'L'],\n\t['Ņ', 'N'],\n\t['Ū', 'U'],\n\t['č', 'c'],\n\t['š', 's'],\n\t['ž', 'z'],\n\t['Č', 'C'],\n\t['Š', 'S'],\n\t['Ž', 'Z'],\n\n\t// Lithuanian\n\t['ą', 'a'],\n\t['č', 'c'],\n\t['ę', 'e'],\n\t['ė', 'e'],\n\t['į', 'i'],\n\t['š', 's'],\n\t['ų', 'u'],\n\t['ū', 'u'],\n\t['ž', 'z'],\n\t['Ą', 'A'],\n\t['Č', 'C'],\n\t['Ę', 'E'],\n\t['Ė', 'E'],\n\t['Į', 'I'],\n\t['Š', 'S'],\n\t['Ų', 'U'],\n\t['Ū', 'U'],\n\n\t// Macedonian\n\t['Ќ', 'Kj'],\n\t['ќ', 'kj'],\n\t['Љ', 'Lj'],\n\t['љ', 'lj'],\n\t['Њ', 'Nj'],\n\t['њ', 'nj'],\n\t['Тс', 'Ts'],\n\t['тс', 'ts'],\n\n\t// Polish\n\t['ą', 'a'],\n\t['ć', 'c'],\n\t['ę', 'e'],\n\t['ł', 'l'],\n\t['ń', 'n'],\n\t['ś', 's'],\n\t['ź', 'z'],\n\t['ż', 'z'],\n\t['Ą', 'A'],\n\t['Ć', 'C'],\n\t['Ę', 'E'],\n\t['Ł', 'L'],\n\t['Ń', 'N'],\n\t['Ś', 'S'],\n\t['Ź', 'Z'],\n\t['Ż', 'Z'],\n\n\t// Disabled as it conflicts with Vietnamese.\n\t// Serbian\n\t// ['љ', 'lj'],\n\t// ['њ', 'nj'],\n\t// ['Љ', 'Lj'],\n\t// ['Њ', 'Nj'],\n\t// ['đ', 'dj'],\n\t// ['Đ', 'Dj'],\n\t// ['ђ', 'dj'],\n\t// ['ј', 'j'],\n\t// ['ћ', 'c'],\n\t// ['џ', 'dz'],\n\t// ['Ђ', 'Dj'],\n\t// ['Ј', 'j'],\n\t// ['Ћ', 'C'],\n\t// ['Џ', 'Dz'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Slovak\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ľ', 'l'],\n\t// ['ĺ', 'l'],\n\t// ['ŕ', 'r'],\n\t// ['Ľ', 'L'],\n\t// ['Ĺ', 'L'],\n\t// ['Ŕ', 'R'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Swedish\n\t// ['å', 'o'],\n\t// ['Å', 'o'],\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ë', 'e'],\n\t// ['Ë', 'E'],\n\t// ['ö', 'o'],\n\t// ['Ö', 'O'],\n\n\t// Ukrainian\n\t['Є', 'Ye'],\n\t['І', 'I'],\n\t['Ї', 'Yi'],\n\t['Ґ', 'G'],\n\t['є', 'ye'],\n\t['і', 'i'],\n\t['ї', 'yi'],\n\t['ґ', 'g']\n\n\t// Danish\n\t// ['Æ', 'Ae'],\n\t// ['Ø', 'Oe'],\n\t// ['Å', 'Aa'],\n\t// ['æ', 'ae'],\n\t// ['ø', 'oe'],\n\t// ['å', 'aa']\n];\n", "'use strict';\nconst deburr = require('lodash.deburr');\nconst escapeStringRegexp = require('escape-string-regexp');\nconst builtinReplacements = require('./replacements');\n\nconst doCustomReplacements = (string, replacements) => {\n\tfor (const [key, value] of replacements) {\n\t\t// TODO: Use `String#replaceAll()` when targeting Node.js 16.\n\t\tstring = string.replace(new RegExp(escapeStringRegexp(key), 'g'), value);\n\t}\n\n\treturn string;\n};\n\nmodule.exports = (string, options) => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\n\t}\n\n\toptions = {\n\t\tcustomReplacements: [],\n\t\t...options\n\t};\n\n\tconst customReplacements = new Map([\n\t\t...builtinReplacements,\n\t\t...options.customReplacements\n\t]);\n\n\tstring = string.normalize();\n\tstring = doCustomReplacements(string, customReplacements);\n\tstring = deburr(string);\n\n\treturn string;\n};\n", "'use strict';\n\nmodule.exports = [\n\t['&', ' and '],\n\t['🦄', ' unicorn '],\n\t['♥', ' love ']\n];\n", "'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst transliterate = require('@sindresorhus/transliterate');\nconst builtinOverridableReplacements = require('./overridable-replacements');\n\nconst decamelize = string => {\n\treturn string\n\t\t// Separate capitalized words.\n\t\t.replace(/([A-Z]{2,})(\\d+)/g, '$1 $2')\n\t\t.replace(/([a-z\\d]+)([A-Z]{2,})/g, '$1 $2')\n\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1 $2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1 $2');\n};\n\nconst removeMootSeparators = (string, separator) => {\n\tconst escapedSeparator = escapeStringRegexp(separator);\n\n\treturn string\n\t\t.replace(new RegExp(`${escapedSeparator}{2,}`, 'g'), separator)\n\t\t.replace(new RegExp(`^${escapedSeparator}|${escapedSeparator}$`, 'g'), '');\n};\n\nconst slugify = (string, options) => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\n\t}\n\n\toptions = {\n\t\tseparator: '-',\n\t\tlowercase: true,\n\t\tdecamelize: true,\n\t\tcustomReplacements: [],\n\t\tpreserveLeadingUnderscore: false,\n\t\t...options\n\t};\n\n\tconst shouldPrependUnderscore = options.preserveLeadingUnderscore && string.startsWith('_');\n\n\tconst customReplacements = new Map([\n\t\t...builtinOverridableReplacements,\n\t\t...options.customReplacements\n\t]);\n\n\tstring = transliterate(string, {customReplacements});\n\n\tif (options.decamelize) {\n\t\tstring = decamelize(string);\n\t}\n\n\tlet patternSlug = /[^a-zA-Z\\d]+/g;\n\n\tif (options.lowercase) {\n\t\tstring = string.toLowerCase();\n\t\tpatternSlug = /[^a-z\\d]+/g;\n\t}\n\n\tstring = string.replace(patternSlug, options.separator);\n\tstring = string.replace(/\\\\/g, '');\n\tif (options.separator) {\n\t\tstring = removeMootSeparators(string, options.separator);\n\t}\n\n\tif (shouldPrependUnderscore) {\n\t\tstring = `_${string}`;\n\t}\n\n\treturn string;\n};\n\nconst counter = () => {\n\tconst occurrences = new Map();\n\n\tconst countable = (string, options) => {\n\t\tstring = slugify(string, options);\n\n\t\tif (!string) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst stringLower = string.toLowerCase();\n\t\tconst numberless = occurrences.get(stringLower.replace(/(?:-\\d+?)+?$/, '')) || 0;\n\t\tconst counter = occurrences.get(stringLower);\n\t\toccurrences.set(stringLower, typeof counter === 'number' ? counter + 1 : 1);\n\t\tconst newCounter = occurrences.get(stringLower) || 2;\n\t\tif (newCounter >= 2 || numberless > 2) {\n\t\t\tstring = `${string}-${newCounter}`;\n\t\t}\n\n\t\treturn string;\n\t};\n\n\tcountable.reset = () => {\n\t\toccurrences.clear();\n\t};\n\n\treturn countable;\n};\n\nmodule.exports = slugify;\nmodule.exports.counter = counter;\n", "export const PERMISSIONS = {\n  // This permission regards the main component (App) and is used to tell\n  // If the plugin link should be displayed in the menu\n  // And also if the plugin is accessible. This use case is found when a user types the url of the\n  // plugin directly in the browser\n  main: [{ action: 'plugin::content-type-builder.read', subject: null }],\n};\n\nexport const MAX_COMPONENT_DEPTH = 6;\n", "import * as React from 'react';\n\nimport { Box, Flex, Typography, Link } from '@strapi/design-system';\nimport { Clock, ArrowClockwise } from '@strapi/icons';\nimport { createPortal } from 'react-dom';\nimport { MessageDescriptor, useIntl } from 'react-intl';\nimport { styled, keyframes } from 'styled-components';\n\n/**\n * TODO: realistically a lot of this logic is isolated to the `core/admin` package.\n * However, we want to expose the `useAutoReloadOverlayBlocker` hook to the plugins.\n *\n * Therefore, in V5 we should move this logic back to the `core/admin` package & export\n * the hook from that package and re-export here. For now, let's keep it all together\n * because it's easier to diagnose and we're not using a million refs because we don't\n * understand what's going on.\n */\nexport interface AutoReloadOverlayBlockerConfig {\n  title?: string;\n  description?: string;\n  icon?: 'reload' | 'time';\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Context\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AutoReloadOverlayBlockerContextValue {\n  lockAppWithAutoreload?: (config?: AutoReloadOverlayBlockerConfig) => void;\n  unlockAppWithAutoreload?: () => void;\n}\n\nconst AutoReloadOverlayBlockerContext = React.createContext<AutoReloadOverlayBlockerContextValue>(\n  {}\n);\n\n/* -------------------------------------------------------------------------------------------------\n * Provider\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AutoReloadOverlayBlockerProviderProps {\n  children: React.ReactNode;\n}\n\nconst MAX_ELAPSED_TIME = 30 * 1000;\n\nconst AutoReloadOverlayBlockerProvider = ({ children }: AutoReloadOverlayBlockerProviderProps) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [config, setConfig] = React.useState<AutoReloadOverlayBlockerConfig>({});\n  const [failed, setFailed] = React.useState(false);\n\n  const lockAppWithAutoreload = React.useCallback((config: AutoReloadOverlayBlockerConfig = {}) => {\n    setIsOpen(true);\n    setConfig(config);\n  }, []);\n\n  const unlockAppWithAutoreload = React.useCallback(() => {\n    setIsOpen(false);\n    setConfig({});\n  }, []);\n\n  // eslint-disable-next-line consistent-return\n  React.useEffect(() => {\n    if (isOpen) {\n      const timeout = setTimeout(() => {\n        setFailed(true);\n      }, MAX_ELAPSED_TIME);\n\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [isOpen]);\n\n  let displayedIcon = config?.icon || 'reload';\n\n  let description = {\n    id: config?.description || 'components.OverlayBlocker.description',\n    defaultMessage:\n      \"You're using a feature that needs the server to restart. The page will reload automatically.\",\n  };\n\n  let title = {\n    id: config?.title || 'components.OverlayBlocker.title',\n    defaultMessage: 'Waiting for restart',\n  };\n\n  if (failed) {\n    displayedIcon = 'time';\n\n    description = {\n      id: 'components.OverlayBlocker.description.serverError',\n      defaultMessage: 'The server should have restarted, please check your logs in the terminal.',\n    };\n\n    title = {\n      id: 'components.OverlayBlocker.title.serverError',\n      defaultMessage: 'The restart is taking longer than expected',\n    };\n  }\n\n  const autoReloadValue = React.useMemo(\n    () => ({\n      lockAppWithAutoreload,\n      unlockAppWithAutoreload,\n    }),\n    [lockAppWithAutoreload, unlockAppWithAutoreload]\n  );\n\n  return (\n    <AutoReloadOverlayBlockerContext.Provider value={autoReloadValue}>\n      <Blocker\n        displayedIcon={displayedIcon}\n        isOpen={isOpen}\n        description={description}\n        title={title}\n      />\n      {children}\n    </AutoReloadOverlayBlockerContext.Provider>\n  );\n};\n\ninterface BlockerProps {\n  displayedIcon: string;\n  description: MessageDescriptor;\n  isOpen: boolean;\n  title: MessageDescriptor;\n}\n\nconst Blocker = ({ displayedIcon, description, title, isOpen }: BlockerProps) => {\n  const { formatMessage } = useIntl();\n\n  // eslint-disable-next-line no-undef\n  return isOpen && globalThis?.document?.body\n    ? createPortal(\n        <Overlay id=\"autoReloadOverlayBlocker\" direction=\"column\" alignItems=\"center\" gap={6}>\n          <Flex direction=\"column\" alignItems=\"center\" gap={2}>\n            <Typography tag=\"h1\" variant=\"alpha\">\n              {formatMessage(title)}\n            </Typography>\n            <Typography tag=\"h2\" textColor=\"neutral600\" fontSize={4} fontWeight=\"regular\">\n              {formatMessage(description)}\n            </Typography>\n          </Flex>\n          {displayedIcon === 'reload' && (\n            <IconBox padding={6} background=\"primary100\" borderColor=\"primary200\">\n              <LoaderReload width=\"4rem\" height=\"4rem\" />\n            </IconBox>\n          )}\n          {displayedIcon === 'time' && (\n            <IconBox padding={6} background=\"primary100\" borderColor=\"primary200\">\n              <Clock width=\"4rem\" height=\"4rem\" />\n            </IconBox>\n          )}\n          <Box marginTop={2}>\n            <Link href=\"https://docs.strapi.io\" isExternal>\n              {formatMessage({\n                id: 'global.documentation',\n                defaultMessage: 'Read the documentation',\n              })}\n            </Link>\n          </Box>\n        </Overlay>,\n        // eslint-disable-next-line no-undef\n        globalThis.document.body\n      )\n    : null;\n};\n\nconst rotation = keyframes`\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(359deg);\n    }\n  `;\n\nconst LoaderReload = styled(ArrowClockwise)`\n  animation: ${rotation} 1s infinite linear;\n`;\n\nconst Overlay = styled(Flex)`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  /* TODO: set this up in the theme for consistence z-index values */\n  z-index: 1140;\n  padding-top: 16rem;\n\n  & > * {\n    position: relative;\n    z-index: 1;\n  }\n\n  &:before {\n    content: '';\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: ${({ theme }) => theme.colors.neutral0};\n    opacity: 0.9;\n  }\n`;\n\nconst IconBox = styled(Box)`\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  svg {\n    > path {\n      fill: ${({ theme }) => theme.colors.primary600} !important;\n    }\n  }\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * Hook\n * -----------------------------------------------------------------------------------------------*/\n\nconst useAutoReloadOverlayBlocker = () => React.useContext(AutoReloadOverlayBlockerContext);\n\nexport { AutoReloadOverlayBlockerProvider, useAutoReloadOverlayBlocker };\n", "const makeUnique = <T extends string>(array: T[]): T[] => [...new Set(array)];\n\nexport { makeUnique };\n", "import get from 'lodash/get';\n\nimport { makeUnique } from '../../../utils/makeUnique';\n\nimport type { AttributeType, Components } from '../../../types';\nimport type { Internal } from '@strapi/types';\n\nconst retrieveComponentsFromSchema = (\n  attributes: AttributeType[],\n  allComponentsData: Components\n): Internal.UID.Component[] => {\n  const allComponents: Internal.UID.Component[] = attributes.reduce((acc: any, current) => {\n    const type = current.type;\n    if (type === 'component') {\n      const currentComponentName = current.component;\n      // Push the existing compo\n      acc.push(currentComponentName);\n\n      const currentComponentAttributes = get(\n        allComponentsData,\n        [currentComponentName, 'schema', 'attributes'],\n        []\n      );\n\n      // Retrieve the nested ones\n      acc.push(...retrieveComponentsFromSchema(currentComponentAttributes, allComponentsData));\n    }\n\n    if (type === 'dynamiczone') {\n      const dynamicZoneComponents = current.components;\n      const componentsFromDZComponents = dynamicZoneComponents.reduce((acc2: any, currentUid) => {\n        const compoAttrs = get(allComponentsData, [currentUid, 'schema', 'attributes'], []);\n\n        return [...acc2, ...retrieveComponentsFromSchema(compoAttrs, allComponentsData)];\n      }, []);\n\n      return [...acc, ...dynamicZoneComponents, ...componentsFromDZComponents];\n    }\n\n    return acc;\n  }, []);\n\n  return makeUnique<Internal.UID.Component>(allComponents);\n};\n\nexport { retrieveComponentsFromSchema };\n", "import type { Schema } from '@strapi/types';\n\n/**\n *\n * Retrieves the relation type\n */\nexport const getRelationType = (\n  relation: Schema.Attribute.RelationKind.WithTarget | undefined,\n  targetAttribute?: string | null\n) => {\n  const hasNotTargetAttribute = targetAttribute === undefined || targetAttribute === null;\n\n  if (relation === 'oneToOne' && hasNotTargetAttribute) {\n    return 'oneWay';\n  }\n\n  if (relation === 'oneToMany' && hasNotTargetAttribute) {\n    return 'manyWay';\n  }\n\n  return relation;\n};\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { current } from 'immer';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { getRelationType } from '../../utils/getRelationType';\nimport { makeUnique } from '../../utils/makeUnique';\n\nimport { retrieveComponentsFromSchema } from './utils/retrieveComponentsFromSchema';\n\nimport type { DataManagerStateType, ContentType, AttributeType, Component } from '../../types';\nimport type { Internal, Schema } from '@strapi/types';\n\ntype Target = 'component' | 'components' | 'contentType' | 'contentTypes';\n\n// TODO: Define all possible actions based on type\nexport type Action<T = any> = {\n  type: T;\n  uid?: string;\n  mainDataKey: Target;\n  schemaType: 'component' | 'contentType';\n  attributeToRemoveName?: string;\n  [key: string]: any;\n};\n\nconst DEFAULT_MODIFIED_DATA = {\n  components: {},\n  contentTypes: {},\n};\n\nconst initialState: DataManagerStateType = {\n  components: {},\n  contentTypes: {},\n  initialComponents: {},\n  initialContentTypes: {},\n  initialData: {},\n  modifiedData: {\n    ...DEFAULT_MODIFIED_DATA,\n  },\n  reservedNames: {},\n  isLoading: true,\n};\n\nconst ONE_SIDE_RELATIONS = ['oneWay', 'manyWay'];\n\nconst getOppositeRelation = (originalRelation?: Schema.Attribute.RelationKind.WithTarget) => {\n  if (originalRelation === 'manyToOne') {\n    return 'oneToMany';\n  }\n\n  if (originalRelation === 'oneToMany') {\n    return 'manyToOne';\n  }\n\n  return originalRelation;\n};\n\nconst findAttributeIndex = (schema: any, attributeToFind?: string) => {\n  return schema.schema.attributes.findIndex(\n    ({ name }: { name: string }) => name === attributeToFind\n  );\n};\n\ntype InitPayload = {\n  components: Record<string, Component>;\n  contentTypes: Record<string, ContentType>;\n  reservedNames: Record<string, string>;\n};\n\ntype AddAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Target;\n  targetUid: string;\n  shouldAddComponentToData: boolean;\n};\n\ntype AddCreateComponentToDynamicZonePayload = {\n  dynamicZoneTarget: string;\n  componentsToAdd: Internal.UID.Component[];\n};\n\ntype AddCustomFieldAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Target;\n  targetUid: string;\n};\n\ntype ChangeDynamicZoneComponentsPayload = {\n  dynamicZoneTarget: string;\n  newComponents: Internal.UID.Component[];\n};\n\ntype CreateComponentSchemaPayload = {\n  uid: string;\n  data: any;\n  componentCategory: string;\n  shouldAddComponentToData: boolean;\n};\n\ntype CreateSchemaPayload = {\n  uid: string;\n  data: any;\n};\n\ntype EditAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Target;\n  targetUid: string;\n  initialAttribute: Record<string, any>;\n};\n\ntype EditCustomFieldAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Target;\n  targetUid: string;\n  initialAttribute: Record<string, any>;\n};\n\ntype RemoveComponentFromDynamicZonePayload = {\n  dzName: string;\n  componentToRemoveIndex: number;\n};\n\ntype RemoveFieldPayload = {\n  mainDataKey: Target;\n  attributeToRemoveName: string;\n};\n\ntype RemoveFieldFromDisplayedComponentPayload = {\n  attributeToRemoveName: string;\n  componentUid: string;\n};\n\ntype SetModifiedDataPayload = {\n  schemaToSet: Partial<DataManagerStateType['modifiedData']>;\n  hasJustCreatedSchema: boolean;\n};\n\ntype UpdateSchemaPayload =\n  | {\n      data: Record<string, any>;\n      schemaType: 'component';\n      uid: string;\n    }\n  | {\n      data: Record<string, any>;\n      schemaType: 'contentType';\n    };\n\nconst slice = createSlice({\n  name: 'data-manager',\n  initialState,\n  reducers: {\n    init: (state, action: PayloadAction<InitPayload>) => {\n      const { components, contentTypes, reservedNames } = action.payload;\n\n      state.components = components;\n      state.initialComponents = components;\n      state.initialContentTypes = contentTypes;\n      state.contentTypes = contentTypes;\n      state.reservedNames = reservedNames;\n      state.isLoading = false;\n\n      state.modifiedData = {\n        ...DEFAULT_MODIFIED_DATA,\n        component: state.modifiedData.component\n          ? components[state.modifiedData.component.uid]\n          : undefined,\n        contentType: state.modifiedData.contentType\n          ? contentTypes[state.modifiedData.contentType.uid]\n          : undefined,\n        components: state.modifiedData.components\n          ? Object.keys(state.modifiedData.components).reduce(\n              (acc, key) => {\n                acc[key] = components[key];\n                return acc;\n              },\n              {} as Record<string, Component>\n            )\n          : {},\n        contentTypes: state.modifiedData.contentTypes\n          ? Object.keys(state.modifiedData.contentTypes).reduce(\n              (acc, key) => {\n                acc[key] = contentTypes[key];\n                return acc;\n              },\n              {} as Record<string, ContentType>\n            )\n          : {},\n      };\n      state.initialData = state.modifiedData;\n    },\n    addAttribute: (state, action: PayloadAction<AddAttributePayload>) => {\n      const { attributeToSet, forTarget, targetUid, shouldAddComponentToData } = action.payload;\n      const { name, ...rest } = attributeToSet;\n\n      delete rest.createComponent;\n\n      const pathToDataToEdit = ['component', 'contentType'].includes(forTarget)\n        ? [forTarget]\n        : [forTarget, targetUid];\n\n      const currentAttributes = get(\n        state,\n        ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'],\n        []\n      ).slice();\n\n      // Add the createdAttribute\n      const updatedAttributes = [...currentAttributes, { ...rest, name }];\n\n      set(state, ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'], updatedAttributes);\n\n      if (shouldAddComponentToData) {\n        const componentToAddUID = rest.component;\n        const componentToAdd = state.components[componentToAddUID];\n        const isTemporaryComponent = componentToAdd?.isTemporary;\n        const hasComponentAlreadyBeenAdded =\n          state.modifiedData.components?.[componentToAddUID] !== undefined;\n\n        if (isTemporaryComponent || hasComponentAlreadyBeenAdded) {\n          return;\n        }\n\n        // Initialize modifiedData.components if it is undefined\n        if (!state.modifiedData.components) {\n          state.modifiedData.components = {};\n        }\n\n        // Add the added component to the modifiedData.components\n        state.modifiedData.components[componentToAddUID] = componentToAdd;\n\n        const nestedComponents = retrieveComponentsFromSchema(\n          componentToAdd.schema.attributes as AttributeType[],\n          state.components\n        );\n\n        // We dont' need to set the already added components otherwise all modifications will be lost so we need to only add the not modified ones\n        const nestedComponentsToAddInModifiedData = nestedComponents.filter(\n          (compoUID: Internal.UID.Component) => {\n            return get(state, ['modifiedData', 'components', compoUID]) === undefined;\n          }\n        );\n\n        nestedComponentsToAddInModifiedData.forEach((compoUID: Internal.UID.Component) => {\n          const compoSchema = get(state, ['components', compoUID], {}) as Component;\n          const isTemporary = compoSchema.isTemporary || false;\n\n          // If the nested component has not been saved we don't need to add them as they are already in the state\n          if (!isTemporary) {\n            if (!state.modifiedData.components) {\n              state.modifiedData.components = {};\n            }\n\n            state.modifiedData.components[compoUID] = compoSchema;\n          }\n        });\n\n        return;\n      }\n\n      const isCreatingRelationAttribute = rest.type === 'relation';\n\n      if (isCreatingRelationAttribute) {\n        const target = rest.target;\n        const targetAttribute = rest.targetAttribute || null;\n        const relation = rest.relation;\n        const relationType = getRelationType(relation, targetAttribute);\n        const currentUid = get(state, ['modifiedData', ...pathToDataToEdit, 'uid']);\n\n        // When the user in creating a relation with the same content type we need to create another attribute\n        // that is the opposite of the created one\n        if (\n          rest.type === 'relation' &&\n          relationType !== 'oneWay' &&\n          relationType !== 'manyWay' &&\n          target === currentUid\n        ) {\n          const oppositeAttribute = {\n            name: targetAttribute,\n            relation: getOppositeRelation(relationType),\n            target,\n            targetAttribute: name,\n            type: 'relation',\n          } as AttributeType;\n\n          if (rest.private) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            oppositeAttribute.private = rest.private;\n          }\n\n          const attributesToSet = [...updatedAttributes, oppositeAttribute];\n\n          set(\n            state,\n            ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'],\n            attributesToSet\n          );\n        }\n      }\n    },\n    addCreatedComponentToDynamicZone: (\n      state,\n      action: PayloadAction<AddCreateComponentToDynamicZonePayload>\n    ) => {\n      const { dynamicZoneTarget, componentsToAdd } = action.payload;\n\n      const dzAttributeIndex = findAttributeIndex(\n        state.modifiedData.contentType,\n        dynamicZoneTarget\n      );\n\n      componentsToAdd.forEach((componentUid: Internal.UID.Component) => {\n        if (!state.modifiedData.contentType) {\n          return;\n        }\n\n        if (!state.modifiedData.contentType.schema.attributes[dzAttributeIndex].components) {\n          state.modifiedData.contentType.schema.attributes[dzAttributeIndex].components = [];\n        }\n        state.modifiedData.contentType.schema.attributes[dzAttributeIndex].components.push(\n          componentUid\n        );\n      });\n    },\n    addCustomFieldAttribute: (state, action: PayloadAction<AddCustomFieldAttributePayload>) => {\n      const { attributeToSet, forTarget, targetUid } = action.payload;\n      const { name, ...rest } = attributeToSet;\n\n      const pathToDataToEdit = ['component', 'contentType'].includes(forTarget)\n        ? [forTarget]\n        : [forTarget, targetUid];\n\n      const currentAttributes = get(\n        state,\n        ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'],\n        []\n      ).slice();\n\n      // Add the createdAttribute\n      const updatedAttributes = [...currentAttributes, { ...rest, name }];\n\n      set(state, ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'], updatedAttributes);\n    },\n    changeDynamicZoneComponents: (\n      state,\n      action: PayloadAction<ChangeDynamicZoneComponentsPayload>\n    ) => {\n      const { dynamicZoneTarget, newComponents } = action.payload;\n\n      const dzAttributeIndex = findAttributeIndex(\n        state.modifiedData.contentType,\n        dynamicZoneTarget\n      );\n\n      const currentDZComponents =\n        (state.modifiedData.contentType?.schema.attributes[dzAttributeIndex]).components;\n\n      const updatedComponents = makeUnique([...currentDZComponents, ...newComponents]);\n\n      (state.modifiedData.contentType?.schema.attributes[dzAttributeIndex]).components =\n        updatedComponents;\n\n      // Retrieve all the components that needs to be added to the modifiedData.components\n      const nestedComponents = retrieveComponentsFromSchema(\n        current(state.modifiedData.contentType?.schema.attributes),\n        state.components\n      );\n\n      // We dont' need to set the already added components otherwise all modifications will be lost so we need to only add the not modified ones\n      const nestedComponentsToAddInModifiedData = nestedComponents.filter((compoUID) => {\n        return get(state, ['modifiedData', 'components', compoUID]) === undefined;\n      });\n\n      nestedComponentsToAddInModifiedData.forEach((compoUID: Internal.UID.Component) => {\n        const compoSchema = get(state, ['components', compoUID], {}) as Component;\n        const isTemporary = compoSchema.isTemporary || false;\n\n        // If the nested component has not been saved we don't need to add them as they are already in the state\n        if (!isTemporary) {\n          if (!state.modifiedData.components) {\n            state.modifiedData.components = {};\n          }\n          state.modifiedData.components[compoUID] = compoSchema;\n        }\n      });\n    },\n    createComponentSchema: (state, action: PayloadAction<CreateComponentSchemaPayload>) => {\n      const { uid, data, componentCategory, shouldAddComponentToData } = action.payload;\n\n      const newSchema: Component = {\n        uid: uid as Internal.UID.Component,\n        isTemporary: true,\n        category: componentCategory,\n        schema: {\n          ...data,\n          attributes: [],\n        },\n      };\n\n      state.components[uid as string] = newSchema;\n\n      if (shouldAddComponentToData) {\n        state.modifiedData.components[uid as string] = newSchema;\n      }\n    },\n    createSchema: (state, action: PayloadAction<CreateSchemaPayload>) => {\n      const { uid, data } = action.payload;\n\n      const newSchema: ContentType = {\n        uid: uid as Internal.UID.ContentType,\n        isTemporary: true,\n        schema: {\n          ...data,\n          attributes: [],\n        },\n      };\n\n      state.contentTypes[uid] = newSchema;\n    },\n    editAttribute: (state, action: PayloadAction<EditAttributePayload>) => {\n      const { attributeToSet, forTarget, targetUid, initialAttribute } = action.payload;\n      const { name, ...rest } = attributeToSet;\n\n      const initialAttributeName = initialAttribute.name;\n      const pathToDataToEdit = ['component', 'contentType'].includes(forTarget)\n        ? [forTarget]\n        : [forTarget, targetUid];\n\n      const initialAttributeIndex = findAttributeIndex(\n        get(state, ['modifiedData', ...pathToDataToEdit]),\n        initialAttributeName\n      );\n\n      const isEditingRelation = rest.type === 'relation';\n\n      if (!isEditingRelation) {\n        set(\n          state,\n          ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes', initialAttributeIndex],\n          attributeToSet\n        );\n\n        return;\n      }\n\n      const updatedAttributes: AttributeType[] = get(state, [\n        'modifiedData',\n        ...pathToDataToEdit,\n        'schema',\n        'attributes',\n      ]).slice();\n\n      // First create the current relation attribute updated\n      const toSet = {\n        name,\n        relation: rest.relation,\n        target: rest.target,\n        targetAttribute: rest.targetAttribute,\n        type: 'relation',\n      } as AttributeType;\n\n      if (rest.private) {\n        toSet.private = rest.private;\n      }\n\n      if (rest.pluginOptions) {\n        toSet.pluginOptions = rest.pluginOptions;\n      }\n\n      const currentAttributeIndex = updatedAttributes.findIndex((value: AttributeType) => {\n        return value.name !== undefined && value.name === initialAttribute.name;\n      });\n\n      // First set it in the updatedAttributes\n      if (currentAttributeIndex !== -1) {\n        updatedAttributes.splice(currentAttributeIndex, 1, toSet);\n      }\n\n      let oppositeAttributeNameToRemove: string | null = null;\n      let oppositeAttributeNameToUpdate: string | null = null;\n      let oppositeAttributeToCreate: AttributeType | null = null;\n      let initialOppositeAttribute = null;\n\n      const currentUid = get(state, ['modifiedData', ...pathToDataToEdit, 'uid']);\n      const didChangeTargetRelation = initialAttribute.target !== rest.target;\n      const didCreateInternalRelation = rest.target === currentUid;\n      const relationType = getRelationType(rest.relation, rest.targetAttribute);\n      const initialRelationType = getRelationType(\n        initialAttribute.relation,\n        initialAttribute.targetAttribute\n      );\n      const hadInternalRelation = initialAttribute.target === currentUid;\n      const didChangeRelationType = initialRelationType !== relationType;\n      const shouldRemoveOppositeAttributeBecauseOfTargetChange =\n        didChangeTargetRelation &&\n        !didCreateInternalRelation &&\n        hadInternalRelation &&\n        isEditingRelation;\n      const shouldRemoveOppositeAttributeBecauseOfRelationTypeChange =\n        didChangeRelationType &&\n        hadInternalRelation &&\n        ['oneWay', 'manyWay'].includes(relationType!) &&\n        isEditingRelation;\n      const shouldUpdateOppositeAttributeBecauseOfRelationTypeChange =\n        !ONE_SIDE_RELATIONS.includes(initialRelationType!) &&\n        !ONE_SIDE_RELATIONS.includes(relationType!) &&\n        hadInternalRelation &&\n        didCreateInternalRelation &&\n        isEditingRelation;\n      const shouldCreateOppositeAttributeBecauseOfRelationTypeChange =\n        ONE_SIDE_RELATIONS.includes(initialRelationType!) &&\n        !ONE_SIDE_RELATIONS.includes(relationType!) &&\n        hadInternalRelation &&\n        didCreateInternalRelation &&\n        isEditingRelation;\n      const shouldCreateOppositeAttributeBecauseOfTargetChange =\n        didChangeTargetRelation &&\n        didCreateInternalRelation &&\n        !ONE_SIDE_RELATIONS.includes(relationType!);\n\n      // Store opposite attribute name to remove at the end of the loop\n      if (\n        shouldRemoveOppositeAttributeBecauseOfTargetChange ||\n        shouldRemoveOppositeAttributeBecauseOfRelationTypeChange\n      ) {\n        oppositeAttributeNameToRemove = initialAttribute.targetAttribute;\n      }\n\n      // In case of oneWay or manyWay relation there isn't an opposite attribute\n      if (oppositeAttributeNameToRemove) {\n        const indexToRemove = updatedAttributes.findIndex(\n          (value) => value.name === oppositeAttributeNameToRemove\n        );\n\n        updatedAttributes.splice(indexToRemove, 1);\n      }\n\n      // In order to preserve plugin options need to get the initial opposite attribute settings\n      if (!shouldRemoveOppositeAttributeBecauseOfTargetChange) {\n        const initialTargetContentType = get(state, [\n          'initialContentTypes',\n          initialAttribute.target,\n        ]);\n\n        if (initialTargetContentType) {\n          const oppositeAttributeIndex = findAttributeIndex(\n            initialTargetContentType,\n            initialAttribute.targetAttribute\n          );\n\n          initialOppositeAttribute = get(state, [\n            'initialContentTypes',\n            initialAttribute.target,\n            'schema',\n            'attributes',\n            oppositeAttributeIndex,\n          ]);\n        }\n      }\n\n      // Create the opposite attribute\n      if (\n        shouldCreateOppositeAttributeBecauseOfRelationTypeChange ||\n        shouldCreateOppositeAttributeBecauseOfTargetChange\n      ) {\n        oppositeAttributeToCreate = {\n          name: rest.targetAttribute,\n          relation: getOppositeRelation(relationType),\n          target: rest.target,\n          targetAttribute: name,\n          type: 'relation',\n        } as AttributeType;\n\n        if (rest.private) {\n          oppositeAttributeToCreate.private = rest.private;\n        }\n\n        if (initialOppositeAttribute && initialOppositeAttribute.pluginOptions) {\n          oppositeAttributeToCreate.pluginOptions = initialOppositeAttribute.pluginOptions;\n        }\n\n        const indexOfInitialAttribute = updatedAttributes.findIndex(\n          ({ name }) => name === initialAttribute.name\n        );\n        const indexOfUpdatedAttribute = updatedAttributes.findIndex(\n          ({ name: attrName }) => name === attrName\n        );\n\n        const indexToInsert =\n          (indexOfInitialAttribute === -1 ? indexOfUpdatedAttribute : indexOfInitialAttribute) + 1;\n\n        updatedAttributes.splice(indexToInsert, 0, oppositeAttributeToCreate);\n      }\n\n      if (shouldUpdateOppositeAttributeBecauseOfRelationTypeChange) {\n        oppositeAttributeNameToUpdate = initialAttribute.targetAttribute;\n\n        oppositeAttributeToCreate = {\n          name: rest.targetAttribute,\n          relation: getOppositeRelation(relationType),\n          target: rest.target,\n          targetAttribute: name,\n          type: 'relation',\n        } as AttributeType;\n\n        if (rest.private) {\n          oppositeAttributeToCreate.private = rest.private;\n        }\n\n        if (initialOppositeAttribute && initialOppositeAttribute.pluginOptions) {\n          oppositeAttributeToCreate.pluginOptions = initialOppositeAttribute.pluginOptions;\n        }\n\n        if (oppositeAttributeNameToUpdate) {\n          const indexToUpdate = updatedAttributes.findIndex(\n            ({ name }) => name === oppositeAttributeNameToUpdate\n          );\n\n          updatedAttributes.splice(indexToUpdate, 1, oppositeAttributeToCreate);\n        }\n      }\n\n      set(state, ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'], updatedAttributes);\n    },\n    editCustomFieldAttribute: (state, action: PayloadAction<EditCustomFieldAttributePayload>) => {\n      const { forTarget, targetUid, initialAttribute, attributeToSet } = action.payload;\n\n      const initialAttributeName = initialAttribute.name;\n      const pathToDataToEdit = ['component', 'contentType'].includes(forTarget)\n        ? [forTarget]\n        : [forTarget, targetUid];\n\n      const initialAttributeIndex = findAttributeIndex(\n        get(state, ['modifiedData', ...pathToDataToEdit]),\n        initialAttributeName\n      );\n\n      set(\n        state,\n        ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes', initialAttributeIndex],\n        attributeToSet\n      );\n    },\n    updateInitialState: (state) => {\n      state.initialData = state.modifiedData;\n    },\n    deleteNotSavedType: (state) => {\n      // Doing so will also reset the modified and the initial data\n      state.contentTypes = state.initialContentTypes;\n      state.components = state.initialComponents;\n    },\n    reloadPlugin: () => {\n      return initialState;\n    },\n    removeComponentFromDynamicZone: (\n      state,\n      action: PayloadAction<RemoveComponentFromDynamicZonePayload>\n    ) => {\n      const { dzName, componentToRemoveIndex } = action.payload;\n\n      const dzAttributeIndex = findAttributeIndex(state.modifiedData.contentType, dzName);\n\n      if (state.modifiedData.contentType) {\n        state.modifiedData.contentType.schema.attributes[dzAttributeIndex].components.splice(\n          componentToRemoveIndex,\n          1\n        );\n      }\n    },\n    removeField: (state, action: PayloadAction<RemoveFieldPayload>) => {\n      const { mainDataKey, attributeToRemoveName } = action.payload;\n      const pathToAttributes = ['modifiedData', mainDataKey, 'schema', 'attributes'];\n      const attributeToRemoveIndex = findAttributeIndex(\n        state.modifiedData[mainDataKey],\n        attributeToRemoveName\n      );\n\n      const pathToAttributeToRemove = [...pathToAttributes, attributeToRemoveIndex];\n      const attributeToRemoveData = get(state, pathToAttributeToRemove);\n      const isRemovingRelationAttribute = attributeToRemoveData.type === 'relation';\n      // Only content types can have relations with themselves since\n      // components can only have oneWay or manyWay relations\n      const canTheAttributeToRemoveHaveARelationWithItself = mainDataKey === 'contentType';\n\n      if (isRemovingRelationAttribute && canTheAttributeToRemoveHaveARelationWithItself) {\n        const { target, relation, targetAttribute } = attributeToRemoveData;\n        const relationType = getRelationType(relation, targetAttribute);\n\n        const uid = state.modifiedData.contentType?.uid;\n        const shouldRemoveOppositeAttribute =\n          target === uid && !ONE_SIDE_RELATIONS.includes(relationType!);\n\n        if (shouldRemoveOppositeAttribute) {\n          const attributes: AttributeType[] =\n            state.modifiedData[mainDataKey]?.schema.attributes.slice();\n          const nextAttributes = attributes.filter((attribute) => {\n            if (attribute.name === attributeToRemoveName) {\n              return false;\n            }\n\n            if (attribute.target === uid && attribute.targetAttribute === attributeToRemoveName) {\n              return false;\n            }\n\n            return true;\n          });\n\n          const schema = state.modifiedData[mainDataKey];\n          if (schema) {\n            schema.schema.attributes = nextAttributes;\n          }\n\n          return;\n        }\n      }\n\n      // Find all uid fields that have the targetField set to the field we are removing\n\n      const uidFieldsToUpdate: string[] = state.modifiedData[\n        mainDataKey\n      ]!.schema.attributes.slice().reduce((acc: string[], current: AttributeType) => {\n        if (current.type !== 'uid') {\n          return acc;\n        }\n\n        if (current.targetField !== attributeToRemoveName) {\n          return acc;\n        }\n\n        acc.push(current.name as string);\n\n        return acc;\n      }, []);\n\n      uidFieldsToUpdate.forEach((fieldName) => {\n        const fieldIndex = findAttributeIndex(state.modifiedData[mainDataKey], fieldName);\n\n        delete state.modifiedData[mainDataKey]?.schema.attributes[fieldIndex].targetField;\n      });\n\n      state.modifiedData[mainDataKey]?.schema.attributes.splice(attributeToRemoveIndex, 1);\n    },\n    removeFieldFromDisplayedComponent: (\n      state,\n      action: PayloadAction<RemoveFieldFromDisplayedComponentPayload>\n    ) => {\n      const { attributeToRemoveName, componentUid } = action.payload;\n\n      const attributeToRemoveIndex = findAttributeIndex(\n        state.modifiedData.components?.[componentUid],\n        attributeToRemoveName\n      );\n\n      state.modifiedData.components?.[componentUid]?.schema?.attributes?.splice(\n        attributeToRemoveIndex,\n        1\n      );\n    },\n    setModifiedData: (state, action: PayloadAction<SetModifiedDataPayload>) => {\n      const { schemaToSet, hasJustCreatedSchema } = action.payload;\n\n      const schema = {\n        ...DEFAULT_MODIFIED_DATA,\n        ...schemaToSet,\n      };\n\n      state.initialData = schema;\n      state.modifiedData = schema;\n\n      // Reset the state with the initial data\n      // All created components and content types will be lost\n      if (!hasJustCreatedSchema) {\n        state.components = state.initialComponents;\n        state.contentTypes = state.initialContentTypes;\n      }\n    },\n    updateSchema: (state, action: PayloadAction<UpdateSchemaPayload>) => {\n      const { data, schemaType } = action.payload;\n\n      const schema = state.modifiedData[schemaType];\n      if (!schema) {\n        return;\n      }\n\n      schema.schema.displayName = data.displayName;\n\n      if (schemaType === 'component') {\n        const { uid } = action.payload;\n\n        schema.category = data.category;\n        schema.schema.icon = data.icon;\n        const addedComponent = current(schema);\n        state.components[uid] = addedComponent as Component;\n      } else {\n        schema.schema.kind = data.kind;\n      }\n    },\n  },\n});\n\nexport const { reducer, actions } = slice;\nexport { initialState };\n", "import slugify from '@sindresorhus/slugify';\n\nexport const nameToSlug = (name: string) => slugify(name, { separator: '-' });\n", "import { nameToSlug } from '../../../utils/nameToSlug';\n\nimport type { Internal } from '@strapi/types';\n\nconst createUid = (name: string): Internal.UID.ContentType => {\n  const modelName = nameToSlug(name);\n  return `api::${modelName}.${modelName}`;\n};\n\n// From `content-type-builder/services/Components/createComponentUid`\nconst createComponentUid = (name: string, category: string): Internal.UID.Component => {\n  return `${nameToSlug(category)}.${nameToSlug(name)}`;\n};\n\nexport { createComponentUid, createUid };\n", "export const customFieldDefaultOptionsReducer = (acc: any, option: any) => {\n  if (option.items) {\n    return option.items.reduce(customFieldDefaultOptionsReducer, acc);\n  }\n\n  if ('defaultValue' in option) {\n    const { name, defaultValue } = option;\n    acc.push({ name, defaultValue });\n  }\n\n  return acc;\n};\n", "/* eslint-disable no-confusing-arrow */\n\nimport type { Schema } from '@strapi/types';\n\nconst shouldPluralizeName = (nature: Schema.Attribute.RelationKind.Any) =>\n  ['manyToMany', 'oneToMany', 'manyWay'].includes(nature) ? 2 : 1;\n\nconst shouldPluralizeTargetAttribute = (nature: Schema.Attribute.RelationKind.Any) =>\n  ['manyToMany', 'manyToOne'].includes(nature) ? 2 : 1;\n\nexport { shouldPluralizeName, shouldPluralizeTargetAttribute };\n", "import { createSlice, type PayloadAction } from '@reduxjs/toolkit';\nimport set from 'lodash/set';\nimport snakeCase from 'lodash/snakeCase';\nimport pluralize from 'pluralize';\n\nimport { getRelationType } from '../../utils/getRelationType';\nimport { nameToSlug } from '../../utils/nameToSlug';\n\nimport { createComponentUid } from './utils/createUid';\nimport { customFieldDefaultOptionsReducer } from './utils/customFieldDefaultOptionsReducer';\nimport { shouldPluralizeName, shouldPluralizeTargetAttribute } from './utils/relations';\n\nimport type { Schema } from '@strapi/types';\n\ntype State = {\n  formErrors: Record<string, any>;\n  modifiedData: Record<string, any>;\n  initialData: Record<string, any>;\n  componentToCreate: Record<string, any>;\n  isCreatingComponentWhileAddingAField: boolean;\n};\n\nconst initialState: State = {\n  formErrors: {},\n  modifiedData: {},\n  initialData: {},\n  componentToCreate: {},\n  isCreatingComponentWhileAddingAField: false,\n};\n\ntype OnChangePayload = {\n  keys: string[];\n  value: any;\n};\n\ntype OnChangeRelationTargetPayload = {\n  target: {\n    oneThatIsCreatingARelationWithAnother: string;\n    selectedContentTypeFriendlyName: string;\n    targetContentTypeAllowedRelations: Schema.Attribute.RelationKind.Any[] | null;\n    value: string;\n  };\n};\n\ntype OnChangeRelationTypePayload = {\n  target: {\n    oneThatIsCreatingARelationWithAnother: string;\n    value: Schema.Attribute.RelationKind.Any;\n  };\n};\n\ntype ResetPropsAndSetFormForAddingAnExistingCompoPayload = {\n  options?: Record<string, any>;\n};\n\ntype ResetPropsAndSaveCurrentDataPayload = {\n  options?: Record<string, any>;\n};\n\ntype SetDataToEditPayload = {\n  data: Record<string, any>;\n};\n\ntype SetAttributeDataSchemaPayload =\n  | {\n      isEditing: true;\n      modifiedDataToSetForEditing: Record<string, any>;\n    }\n  | {\n      isEditing?: false;\n      modifiedDataToSetForEditing: Record<string, any>;\n      attributeType: string;\n      nameToSetForRelation: string;\n      targetUid: string;\n      step: string | null;\n      options?: Record<string, any>;\n    };\n\ntype SetCustomFieldDataSchemaPayload =\n  | {\n      isEditing: true;\n      modifiedDataToSetForEditing: Record<string, any>;\n    }\n  | {\n      isEditing?: false;\n      modifiedDataToSetForEditing: Record<string, any>;\n      customField: Record<string, any>;\n      options?: Record<string, any>;\n    };\n\ntype SetDynamicZoneDataSchemaPayload = {\n  attributeToEdit: Record<string, any>;\n};\n\ntype SetErrorsPayload = {\n  errors: Record<string, any>;\n};\n\nconst slice = createSlice({\n  name: 'formModal',\n  initialState,\n  reducers: {\n    onChange: (state, action: PayloadAction<OnChangePayload>) => {\n      const { keys, value } = action.payload;\n      const obj = state.modifiedData;\n      const hasDefaultValue = Boolean(obj.default);\n\n      // There is no need to remove the default key if the default value isn't defined\n      if (hasDefaultValue && keys.length === 1 && keys.includes('type')) {\n        const previousType = obj.type;\n\n        if (previousType && ['date', 'datetime', 'time'].includes(previousType)) {\n          // return obj.updateIn(keys, () => value).remove('default');\n          delete state.modifiedData.default;\n        }\n      }\n\n      set(state, ['modifiedData', ...keys], value);\n    },\n    onChangeRelationTarget: (state, action: PayloadAction<OnChangeRelationTargetPayload>) => {\n      const {\n        target: {\n          oneThatIsCreatingARelationWithAnother,\n          selectedContentTypeFriendlyName,\n          targetContentTypeAllowedRelations,\n          value,\n        },\n      } = action.payload;\n      // Special case for the admin user...\n      let didChangeRelationTypeBecauseOfRestrictedRelation = false;\n      let changedRelationType: Schema.Attribute.RelationKind.Any | null = null;\n\n      set(state, ['modifiedData', 'target'], value);\n\n      const modifiedData = state.modifiedData;\n\n      // Don't change the relation type if the allowed relations are not restricted\n      // TODO: replace with an obj { relation: 'x', bidirctional: true|false } when BE ready\n      if (Array.isArray(targetContentTypeAllowedRelations)) {\n        const currentRelationType = getRelationType(\n          modifiedData.relation,\n          modifiedData.targetAttribute\n        );\n\n        if (\n          currentRelationType &&\n          !targetContentTypeAllowedRelations.includes(currentRelationType)\n        ) {\n          const relationToSet = targetContentTypeAllowedRelations[0];\n          didChangeRelationTypeBecauseOfRestrictedRelation = true;\n          changedRelationType = relationToSet;\n\n          if (relationToSet === 'oneWay') {\n            set(state, ['modifiedData', 'relation'], 'oneToOne');\n          } else if (relationToSet === 'manyWay') {\n            set(state, ['modifiedData', 'relation'], 'oneToMany');\n          } else {\n            set(state, ['modifiedData', 'relation'], relationToSet);\n          }\n        }\n      }\n\n      let nameToSet: string;\n\n      if (didChangeRelationTypeBecauseOfRestrictedRelation && changedRelationType) {\n        nameToSet = pluralize(\n          snakeCase(nameToSlug(selectedContentTypeFriendlyName)),\n          shouldPluralizeName(changedRelationType)\n        );\n      } else {\n        nameToSet = pluralize(\n          snakeCase(nameToSlug(selectedContentTypeFriendlyName)),\n\n          shouldPluralizeName(modifiedData.relation)\n        );\n      }\n\n      set(state, ['modifiedData', 'name'], nameToSet);\n\n      const currentTargetAttribute = state.modifiedData.targetAttribute;\n\n      if (currentTargetAttribute === null) {\n        return;\n      }\n\n      // Changing the target and the relation is either oneWay or manyWay\n      // Case when we need to change the relation to oneWay (ex: admin user)\n      if (\n        didChangeRelationTypeBecauseOfRestrictedRelation &&\n        changedRelationType &&\n        ['oneWay', 'manyWay'].includes(changedRelationType)\n      ) {\n        set(state, ['modifiedData', 'targetAttribute'], null);\n\n        return;\n      }\n\n      const targetAttributeToSet = pluralize(\n        snakeCase(nameToSlug(oneThatIsCreatingARelationWithAnother)),\n        shouldPluralizeTargetAttribute(modifiedData.relation)\n      );\n\n      set(state, ['modifiedData', 'targetAttribute'], targetAttributeToSet);\n    },\n    onChangeRelationType: (state, action: PayloadAction<OnChangeRelationTypePayload>) => {\n      const {\n        target: { oneThatIsCreatingARelationWithAnother, value },\n      } = action.payload;\n\n      const currentName = state.modifiedData.name;\n\n      // Switching from oneWay\n      if (!['oneWay', 'manyWay'].includes(value)) {\n        set(state, ['modifiedData', 'relation'], value);\n        const currentTargetAttribute = state.modifiedData.targetAttribute;\n\n        set(\n          state,\n          ['modifiedData', 'name'],\n          pluralize(snakeCase(nameToSlug(currentName)), shouldPluralizeName(value))\n        );\n\n        set(\n          state,\n          ['modifiedData', 'targetAttribute'],\n          pluralize(\n            currentTargetAttribute || snakeCase(nameToSlug(oneThatIsCreatingARelationWithAnother)),\n            shouldPluralizeTargetAttribute(value)\n          )\n        );\n\n        return;\n      }\n\n      if (value === 'oneWay') {\n        set(state, ['modifiedData', 'relation'], 'oneToOne');\n        set(state, ['modifiedData', 'targetAttribute'], null);\n        set(state, ['modifiedData', 'name'], pluralize(snakeCase(currentName), 1));\n\n        return;\n      }\n\n      // manyWay\n      set(state, ['modifiedData', 'relation'], 'oneToMany');\n      set(state, ['modifiedData', 'targetAttribute'], null);\n      set(state, ['modifiedData', 'name'], pluralize(snakeCase(currentName), 2));\n    },\n    resetProps: () => {\n      return initialState;\n    },\n    resetPropsAndSetFormForAddingAnExistingCompo: (\n      state,\n      action: PayloadAction<ResetPropsAndSetFormForAddingAnExistingCompoPayload>\n    ) => {\n      const { options = {} } = action.payload;\n\n      return {\n        ...initialState,\n        modifiedData: {\n          type: 'component',\n          repeatable: true,\n          ...options,\n        },\n      };\n    },\n    resetPropsAndSaveCurrentData: (\n      state,\n      action: PayloadAction<ResetPropsAndSaveCurrentDataPayload>\n    ) => {\n      const { options = {} } = action.payload;\n      // This is run when the user has created a new component\n      const componentToCreate = state.modifiedData.componentToCreate;\n      const modifiedData = {\n        displayName: componentToCreate.displayName,\n        type: 'component',\n        repeatable: false,\n        ...options,\n        component: createComponentUid(componentToCreate.displayName, componentToCreate.category),\n      };\n\n      return {\n        ...initialState,\n        componentToCreate,\n        modifiedData,\n        isCreatingComponentWhileAddingAField: state.modifiedData.createComponent,\n      };\n    },\n    resetPropsAndSetTheFormForAddingACompoToADz: (state) => {\n      const createdDZ = state.modifiedData;\n      const dataToSet = {\n        ...createdDZ,\n        createComponent: true,\n        componentToCreate: { type: 'component' },\n      };\n\n      return { ...initialState, modifiedData: dataToSet };\n    },\n    setDataToEdit: (state, action: PayloadAction<SetDataToEditPayload>) => {\n      const { data } = action.payload;\n      state.modifiedData = data;\n      state.initialData = data;\n    },\n    setAttributeDataSchema: (state, action: PayloadAction<SetAttributeDataSchemaPayload>) => {\n      const { isEditing } = action.payload;\n\n      if (isEditing) {\n        const { modifiedDataToSetForEditing } = action.payload;\n        state.modifiedData = modifiedDataToSetForEditing;\n        state.initialData = modifiedDataToSetForEditing;\n\n        return;\n      }\n\n      const { attributeType, nameToSetForRelation, targetUid, step, options = {} } = action.payload;\n\n      let dataToSet;\n\n      if (attributeType === 'component') {\n        if (step === '1') {\n          dataToSet = {\n            type: 'component',\n            createComponent: true,\n            componentToCreate: { type: 'component' },\n          };\n        } else {\n          dataToSet = {\n            ...options,\n            type: 'component',\n            repeatable: true,\n          };\n        }\n      } else if (attributeType === 'dynamiczone') {\n        dataToSet = {\n          ...options,\n          type: 'dynamiczone',\n          components: [],\n        };\n      } else if (attributeType === 'text') {\n        dataToSet = { ...options, type: 'string' };\n      } else if (attributeType === 'number' || attributeType === 'date') {\n        dataToSet = options;\n      } else if (attributeType === 'media') {\n        dataToSet = {\n          allowedTypes: ['images', 'files', 'videos', 'audios'],\n          type: 'media',\n          multiple: true,\n          ...options,\n        };\n      } else if (attributeType === 'enumeration') {\n        dataToSet = { ...options, type: 'enumeration', enum: [] };\n      } else if (attributeType === 'relation') {\n        dataToSet = {\n          name: snakeCase(nameToSetForRelation),\n          relation: 'oneToOne',\n          targetAttribute: null,\n          target: targetUid,\n          type: 'relation',\n        };\n      } else {\n        dataToSet = { ...options, type: attributeType, default: null };\n      }\n\n      state.modifiedData = dataToSet;\n    },\n    setCustomFieldDataSchema: (state, action: PayloadAction<SetCustomFieldDataSchemaPayload>) => {\n      const { isEditing } = action.payload;\n\n      if (isEditing) {\n        const { modifiedDataToSetForEditing } = action.payload;\n        state.modifiedData = modifiedDataToSetForEditing;\n        state.initialData = modifiedDataToSetForEditing;\n\n        return;\n      }\n\n      const { customField, options = {} } = action.payload;\n\n      state.modifiedData = { ...options, type: customField.type };\n\n      const allOptions = [\n        ...(customField?.options?.base || []),\n        ...(customField?.options?.advanced || []),\n      ];\n\n      const optionDefaults = allOptions.reduce(customFieldDefaultOptionsReducer, []);\n\n      if (optionDefaults.length) {\n        optionDefaults.forEach(({ name, defaultValue }: { name: string; defaultValue: string }) =>\n          set(state.modifiedData, name, defaultValue)\n        );\n      }\n    },\n    setDynamicZoneDataSchema: (state, action: PayloadAction<SetDynamicZoneDataSchemaPayload>) => {\n      const { attributeToEdit } = action.payload;\n      state.modifiedData = attributeToEdit;\n      state.initialData = attributeToEdit;\n    },\n    setErrors: (state, action: PayloadAction<SetErrorsPayload>) => {\n      state.formErrors = action.payload.errors;\n    },\n  },\n});\n\nexport { initialState };\nexport const { actions, reducer } = slice;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAUA,QAAI,WAAW,IAAI;AAGnB,QAAI,YAAY;AAGhB,QAAI,UAAU;AAGd,QAAI,oBAAoB;AAAxB,QACI,sBAAsB;AAG1B,QAAI,UAAU,MAAM,oBAAoB,sBAAsB;AAM9D,QAAI,cAAc,OAAO,SAAS,GAAG;AAGrC,QAAI,kBAAkB;AAAA;AAAA,MAEpB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MACnC,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA;AAAA,MAER,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MA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",
  "names": ["require_escape_string_regexp", "slugify", "counter", "PERMISSIONS", "main", "action", "subject", "MAX_COMPONENT_DEPTH", "AutoReloadOverlayBlockerContext", "createContext", "MAX_ELAPSED_TIME", "AutoReloadOverlayBlockerProvider", "children", "isOpen", "setIsOpen", "useState", "config", "setConfig", "failed", "setFailed", "lockAppWithAutoreload", "useCallback", "unlockAppWithAutoreload", "React", "useEffect", "timeout", "setTimeout", "clearTimeout", "displayedIcon", "icon", "description", "id", "defaultMessage", "title", "autoReloadValue", "useMemo", "_jsxs", "Provider", "value", "_jsx", "Blocker", "formatMessage", "useIntl", "globalThis", "document", "body", "createPortal", "Overlay", "direction", "alignItems", "gap", "Flex", "Typography", "tag", "variant", "textColor", "fontSize", "fontWeight", "IconBox", "padding", "background", "borderColor", "LoaderReload", "width", "height", "Clock", "Box", "marginTop", "Link", "href", "isExternal", "rotation", "keyframes", "styled", "ArrowClockwise", "theme", "colors", "neutral0", "primary600", "useAutoReloadOverlayBlocker", "useContext", "makeUnique", "array", "Set", "retrieveComponentsFromSchema", "attributes", "allComponentsData", "allComponents", "reduce", "acc", "current", "type", "currentComponentName", "component", "push", "currentComponentAttributes", "get", "dynamicZoneComponents", "components", "componentsFromDZComponents", "acc2", "currentUid", "compoAttrs", "makeUnique", "getRelationType", "relation", "targetAttribute", "hasNotTargetAttribute", "undefined", "DEFAULT_MODIFIED_DATA", "components", "contentTypes", "initialState", "initialComponents", "initialContentTypes", "initialData", "modifiedData", "reservedNames", "isLoading", "ONE_SIDE_RELATIONS", "getOppositeRelation", "originalRelation", "findAttributeIndex", "schema", "attributeToFind", "attributes", "findIndex", "name", "slice", "createSlice", "reducers", "init", "state", "action", "payload", "component", "uid", "undefined", "contentType", "Object", "keys", "reduce", "acc", "key", "addAttribute", "attributeToSet", "forTarget", "targetUid", "shouldAddComponentToData", "rest", "createComponent", "pathToDataToEdit", "includes", "currentAttributes", "get", "updatedAttributes", "set", "componentToAddUID", "componentToAdd", "isTemporaryComponent", "isTemporary", "hasComponentAlreadyBeenAdded", "nestedComponents", "retrieveComponentsFromSchema", "nestedComponentsToAddInModifiedData", "filter", "compoUID", "forEach", "compoSchema", "isCreatingRelationAttribute", "type", "target", "targetAttribute", "relation", "relationType", "getRelationType", "currentUid", "oppositeAttribute", "private", "attributesToSet", "addCreatedComponentToDynamicZone", "dynamicZoneTarget", "componentsToAdd", "dzAttributeIndex", "componentUid", "push", "addCustomFieldAttribute", "changeDynamicZoneComponents", "newComponents", "currentDZComponents", "updatedComponents", "makeUnique", "current", "createComponentSchema", "data", "componentCategory", "newSchema", "category", "createSchema", "editAttribute", "initialAttribute", "initialAttributeName", "initialAttributeIndex", "isEditingRelation", "toSet", "pluginOptions", "currentAttributeIndex", "value", "splice", "oppositeAttributeNameToRemove", "oppositeAttributeNameToUpdate", "oppositeAttributeToCreate", "initialOppositeAttribute", "didChangeTargetRelation", "didCreateInternalRelation", "initialRelationType", "hadInternalRelation", "didChangeRelationType", "shouldRemoveOppositeAttributeBecauseOfTargetChange", "shouldRemoveOppositeAttributeBecauseOfRelationTypeChange", "shouldUpdateOppositeAttributeBecauseOfRelationTypeChange", "shouldCreateOppositeAttributeBecauseOfRelationTypeChange", "shouldCreateOppositeAttributeBecauseOfTargetChange", "indexToRemove", "initialTargetContentType", "oppositeAttributeIndex", "indexOfInitialAttribute", "indexOfUpdatedAttribute", "attrName", "indexToInsert", "indexToUpdate", "editCustomFieldAttribute", "updateInitialState", "deleteNotSavedType", "reloadPlugin", "removeComponentFromDynamicZone", "dzName", "componentToRemoveIndex", "removeField", "mainDataKey", "attributeToRemoveName", "pathToAttributes", "attributeToRemoveIndex", "pathToAttributeToRemove", "attributeToRemoveData", "isRemovingRelationAttribute", "canTheAttributeToRemoveHaveARelationWithItself", "shouldRemoveOppositeAttribute", "nextAttributes", "attribute", "uidFieldsToUpdate", "targetField", "fieldName", "fieldIndex", "_a", "removeFieldFromDisplayedComponent", "setModifiedData", "schemaToSet", "hasJustCreatedSchema", "updateSchema", "schemaType", "displayName", "icon", "addedComponent", "kind", "reducer", "actions", "nameToSlug", "name", "slugify", "separator", "createUid", "name", "modelName", "nameToSlug", "createComponentUid", "category", "customFieldDefaultOptionsReducer", "acc", "option", "items", "reduce", "name", "defaultValue", "push", "shouldPluralizeName", "nature", "includes", "shouldPluralizeTargetAttribute", "initialState", "formErrors", "modifiedData", "initialData", "componentToCreate", "isCreatingComponentWhileAddingAField", "slice", "createSlice", "name", "reducers", "onChange", "state", "action", "keys", "value", "payload", "obj", "hasDefaultValue", "Boolean", "default", "length", "includes", "previousType", "type", "set", "onChangeRelationTarget", "target", "oneThatIsCreatingARelationWithAnother", "selectedContentTypeFriendlyName", "targetContentTypeAllowedRelations", "didChangeRelationTypeBecauseOfRestrictedRelation", "changedRelationType", "Array", "isArray", "currentRelationType", "getRelationType", "relation", "targetAttribute", "relationToSet", "nameToSet", "pluralize", "snakeCase", "nameToSlug", "shouldPluralizeName", "currentTargetAttribute", "targetAttributeToSet", "shouldPluralizeTargetAttribute", "onChangeRelationType", "currentName", "resetProps", "resetPropsAndSetFormForAddingAnExistingCompo", "options", "repeatable", "resetPropsAndSaveCurrentData", "displayName", "component", "createComponentUid", "category", "createComponent", "resetPropsAndSetTheFormForAddingACompoToADz", "createdDZ", "dataToSet", "setDataToEdit", "data", "setAttributeDataSchema", "isEditing", "modifiedDataToSetForEditing", "attributeType", "nameToSetForRelation", "targetUid", "step", "components", "allowedTypes", "multiple", "enum", "setCustomFieldDataSchema", "customField", "allOptions", "base", "advanced", "optionDefaults", "reduce", "customFieldDefaultOptionsReducer", "forEach", "defaultValue", "setDynamicZoneDataSchema", "attributeToEdit", "setErrors", "errors", "actions", "reducer"]
}
